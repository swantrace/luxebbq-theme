{
  "version": 3,
  "sources": ["../src/components/common/Pagination.js", "../src/components/common/TopControllers.js", "../src/components/common/Products.js"],
  "sourcesContent": ["import { html, virtual } from '@apollo-elements/haunted';\nimport ProductListLoading from './ProductListLoading';\n\nconst Pagination = virtual(\n  ({\n    fetchIsFinished,\n    pageNumber,\n    displayedPageNumbers,\n    pageCount,\n    handlePageLinkClicked,\n  }) =>\n    // const context = usePageContext();\n    // const state = context?.state ?? {};\n    // const dispatch = context?.dispatch ?? (() => {});\n    // const fetchIsFinished = state?.fetchIsFinished ?? false;\n    // const pageCount = getPageCount(state, productType);\n    // const { pageNumber } = state;\n    // const displayedPageNumbers = getDisplayedPageNumbers(pageCount, pageNumber);\n\n    // const handlePageLinkClicked = (number) => {\n    //   if (Number.isNaN(Number(number))) {\n    //     return;\n    //   }\n    //   dispatch({ type: 'changePageNumber', payload: number });\n    // };\n\n    html`<div class=\"product-pagination\">\n      <div class=\"theme-paggination-block\">\n        <div class=\"container-fluid p-0\">\n          <div class=\"row justify-content-center\">\n            <nav aria-label=\"Page navigation\">\n              ${fetchIsFinished\n                ? html`<ul class=\"pagination\">\n                    ${pageNumber > 1\n                      ? html`<li class=\"page-item\">\n                          <a\n                            class=\"page-link paginate_btn_cls\"\n                            href=\"javascript:void(0)\"\n                            aria-label=\"Previous\"\n                            @click=${(e) =>\n                              handlePageLinkClicked(pageNumber - 1, e)}\n                          >\n                            <span aria-hidden=\"true\">\u00AB</span>\n                          </a>\n                        </li>`\n                      : null}\n                    ${displayedPageNumbers.map(\n                      (number) => html`\n                        <li\n                          class=${`page-item${\n                            number === pageNumber ? ' active' : ''\n                          }`}\n                        >\n                          <a\n                            class=${`page-link${\n                              number === pageNumber ? '' : ' paginate_btn_cls'\n                            }`}\n                            href=\"javascript:void(0)\"\n                            @click=${(e) => handlePageLinkClicked(number, e)}\n                            >${number}</a\n                          >\n                        </li>\n                      `\n                    )}\n                    ${pageNumber < pageCount\n                      ? html`<li class=\"page-item\">\n                          <a\n                            class=\"page-link paginate_btn_cls\"\n                            href=\"javascript:void(0)\"\n                            aria-label=\"Next\"\n                            @click=${(e) =>\n                              handlePageLinkClicked(pageNumber + 1, e)}\n                          >\n                            <span aria-hidden=\"true\">\u00BB</span>\n                          </a>\n                        </li>`\n                      : null}\n                  </ul>`\n                : html`${ProductListLoading({\n                    height: '50px',\n                    marginBottom: '0',\n                    customClass: 'pagination-loading',\n                  })}`}\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>`\n);\n\nexport default Pagination;\n", "import { html, virtual } from '@apollo-elements/haunted';\nimport ProductListLoading from './ProductListLoading';\n\nconst MainContentTopControllers = virtual(\n  ({\n    fetchIsFinished,\n    productsSize,\n    viewMode,\n    productsPerPage,\n    sortValue,\n    handleViewModeIconClicked,\n    handleProductsPerPageChanged,\n    handleSortValueChanged,\n  }) =>\n    // const context = usePageContext();\n    // const state = context?.state ?? {};\n    // const dispatch = context?.dispatch ?? (() => {});\n    // const fetchIsFinished = state?.fetchIsFinished ?? false;\n    // const searchedProducts = getFilteredSortedProducts(state, productType);\n    // const viewMode = state?.viewMode ?? 'grid';\n    // const productsPerPage = context?.state?.productsPerPage ?? 24;\n    // const sortValue = state?.sortValue ?? 'BEST_SELLING_ASC';\n\n    // const handleViewModeIconClicked = (newViewMode) => {\n    //   dispatch({ type: 'changeViewMode', payload: newViewMode });\n    // };\n\n    // const handleProductsPerPageChanged = (e) => {\n    //   dispatch({\n    //     type: 'changeProductsPerPage',\n    //     payload: Number(e.target.value),\n    //   });\n    // };\n\n    // const handleSortValueChanged = (e) => {\n    //   dispatch({\n    //     type: 'changeSortValue',\n    //     payload: e.target.value,\n    //   });\n    // };\n\n    // const productsSize = searchedProducts.length;\n\n    html`<div class=\"row py-5\">\n      <div class=\"col-12\">\n        <div class=\"product-filter-content collection-top-controllers\">\n          <div class=\"search-count\">\n            ${fetchIsFinished\n              ? html`<h5>\n                  ${productsSize} Products match your search criteria\n                </h5>`\n              : html`${ProductListLoading()}`}\n          </div>\n          <div class=\"collection-view\">\n            <ul>\n              <li class=${viewMode === 'grid' ? 'active' : ''}>\n                <i\n                  class=\"fa fa-th grid-layout-view\"\n                  @click=${(e) => handleViewModeIconClicked('grid', e)}\n                ></i>\n              </li>\n              <li class=${viewMode === 'list' ? 'active' : ''}>\n                <i\n                  class=\"fa fa-list-ul list-layout-view\"\n                  @click=${(e) => handleViewModeIconClicked('list', e)}\n                ></i>\n              </li>\n            </ul>\n          </div>\n          <div class=\"product-page-per-view\">\n            <select\n              name=\"pro_limit\"\n              value=${productsPerPage}\n              @change=${handleProductsPerPageChanged}\n            >\n              ${[12, 24, 36, 48].map(\n                (ppp) => html`\n                  <option value=${ppp} ?selected=${productsPerPage === ppp}>\n                    ${ppp} Products\n                  </option>\n                `\n              )}\n            </select>\n          </div>\n          <div class=\"product-page-filter\">\n            <select\n              name=\"sortBy\"\n              id=\"sortBy\"\n              value=${sortValue}\n              @change=${handleSortValueChanged}\n            >\n              ${[\n                ['BEST_SELLING_ASC', 'Best Selling'],\n                ['TITLE_ASC', 'Alphabetically, A-Z'],\n                ['TITLE_DESC', 'Alphabetically, Z-A'],\n                ['PRICE_ASC', 'Price, low to high'],\n                ['PRICE_DESC', 'Price, high to low'],\n              ].map(\n                ([value, label]) => html` <option\n                  value=${value}\n                  ?selected=${sortValue === value}\n                >\n                  ${label}\n                </option>`\n              )}\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>`\n);\n\nexport default MainContentTopControllers;\n", "import { html, useEffect, virtual } from '@apollo-elements/haunted';\nimport ProductItem from './ProductItem';\n\nconst Products = virtual(\n  ({\n    productsOfCurrentPage,\n    mainContentElement,\n    viewMode,\n    emptyCollectionImage,\n    itemClassList = {\n      grid: 'col-lg-4 col-md-6 col-grid-box',\n      list: 'col-lg-12',\n    },\n  }) => {\n    useEffect(() => {\n      const imgs = mainContentElement.querySelectorAll('img.lazyloaded');\n      imgs.forEach((img) => {\n        img.classList.remove('lazyloaded');\n        img.classList.add('lazyload');\n      });\n    }, [productsOfCurrentPage]);\n\n    return html`<div\n      class=${`product-wrapper-grid collection-grid${\n        viewMode === 'grid' ? '' : ' list-view'\n      }`}\n      style=\"opacity: 1;\"\n    >\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          ${productsOfCurrentPage.length > 0\n            ? productsOfCurrentPage.map(\n                (product) =>\n                  html`<div class=${itemClassList[viewMode]}>\n                    ${ProductItem({ product })}\n                  </div>`\n              )\n            : html`<div class=\"col-sm-12 text-center mt-5\">\n                <img src=${emptyCollectionImage} class=\"img-fluid mb-5\" />\n                <h3 class=\"text-center m-0\">Sorry, No products found</h3>\n              </div>`}\n        </div>\n      </div>\n    </div>`;\n  }\n);\n\nexport default Products;\n"],
  "mappings": "wGAGA,GAAM,GAAa,EACjB,CAAC,CACC,kBACA,aACA,uBACA,YACA,2BAiBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKY,EACE;AAAA,sBACI,EAAa,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKa,AAAC,GACR,EAAsB,EAAa,EAAG;AAAA;AAAA;AAAA;AAAA,+BAK5C;AAAA,sBACF,EAAqB,IACrB,AAAC,GAAW;AAAA;AAAA,kCAEA,YACN,IAAW,EAAa,UAAY;AAAA;AAAA;AAAA,oCAI5B,YACN,IAAW,EAAa,GAAK;AAAA;AAAA,qCAGtB,AAAC,GAAM,EAAsB,EAAQ;AAAA,+BAC3C;AAAA;AAAA;AAAA;AAAA,sBAKT,EAAa,EACX;AAAA;AAAA;AAAA;AAAA;AAAA,qCAKa,AAAC,GACR,EAAsB,EAAa,EAAG;AAAA;AAAA;AAAA;AAAA,+BAK5C;AAAA,yBAEN,IAAO,EAAmB,CACxB,OAAQ,OACR,aAAc,IACd,YAAa;AAAA;AAAA;AAAA;AAAA;AAAA,aAS1B,EAAQ,ECvFf,GAAM,GAA4B,EAChC,CAAC,CACC,kBACA,eACA,WACA,kBACA,YACA,4BACA,+BACA,4BA+BA;AAAA;AAAA;AAAA;AAAA,cAIU,EACE;AAAA,oBACI;AAAA,uBAEJ,IAAO;AAAA;AAAA;AAAA;AAAA,0BAIG,IAAa,OAAS,SAAW;AAAA;AAAA;AAAA,2BAGhC,AAAC,GAAM,EAA0B,OAAQ;AAAA;AAAA;AAAA,0BAG1C,IAAa,OAAS,SAAW;AAAA;AAAA;AAAA,2BAGhC,AAAC,GAAM,EAA0B,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQ9C;AAAA,wBACE;AAAA;AAAA,gBAER,CAAC,GAAI,GAAI,GAAI,IAAI,IACjB,AAAC,GAAQ;AAAA,kCACS,eAAiB,IAAoB;AAAA,sBACjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUA;AAAA,wBACE;AAAA;AAAA,gBAER,CACA,CAAC,mBAAoB,gBACrB,CAAC,YAAa,uBACd,CAAC,aAAc,uBACf,CAAC,YAAa,sBACd,CAAC,aAAc,uBACf,IACA,CAAC,CAAC,EAAO,KAAW;AAAA,0BACV;AAAA,8BACI,IAAc;AAAA;AAAA,oBAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUb,EAAQ,EC7Gf,GAAM,GAAW,EACf,CAAC,CACC,wBACA,qBACA,WACA,uBACA,gBAAgB,CACd,KAAM,iCACN,KAAM,gBAGR,GAAU,IAAM,CAEd,AADa,EAAmB,iBAAiB,kBAC5C,QAAQ,AAAC,GAAQ,CACpB,EAAI,UAAU,OAAO,cACrB,EAAI,UAAU,IAAI,eAEnB,CAAC,IAEG;AAAA,cACG,uCACN,IAAa,OAAS,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAMvB,EAAsB,OAAS,EAC7B,EAAsB,IACpB,AAAC,GACC,eAAkB,EAAc;AAAA,sBAC5B,EAAY,CAAE;AAAA,2BAGtB;AAAA,2BACa;AAAA;AAAA;AAAA;AAAA;AAAA,cASpB,EAAQ",
  "names": []
}
