import{a as O,b as V,c as $}from"./chunk-K4MGGVBQ.js";import{a as W,b as M}from"./chunk-URQKBNG2.js";import"./chunk-USJPHQKU.js";import{a as ee}from"./chunk-JLH2EYJI.js";import{B as x,C as S,D as A,E as _,F as q,b as Z,f as c,g as D,i as T,j as U,k as I,l as B,n as F,o as L,s as z,t as H,x as G,z as Q}from"./chunk-NCQMUVAP.js";var E=F(()=>{let a=new URLSearchParams(window.location.search),l=decodeURI(a.get("q")??""),[s,o]=T(l);return c`
    <div class="row search-bar-row">
      <div class="col-lg-10 offset-lg-1">
        <form class="form-header" action="/search" method="get" role="search">
          <div class="input-group">
            <input
              type="search"
              class="form-control"
              name="q"
              value=${s}
              onChange=${n=>{o(n.target.value)}}
              aria-label="Amount (to the nearest dollar)"
              placeholder="Type some keywords"
            />
            <div class="input-group-append">
              <button class="btn btn-solid">
                <span class="search-text">Search</span
                ><span class="search-icon"
                  >&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Â»</span
                >
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  `}),f=E;var P=Z(ee());function k(){let{productsOfFirstPage:a,state:l,dispatch:s,emptyCollectionImage:o}=M(),{allProducts:i,fetchIsFinished:n,viewMode:d,sortValue:h,productsPerPage:u,pageNumber:e}=l,r=i.sort(x(l)),b=r.length,m=[],p=1,g=[1];if(!n)m=a??[];else{let t=(0,P.default)(r,u);m=t?.[e-1]??[],p=t?.length??1,g=A(p,e)}let v=I(this),C=t=>{s({type:"changeViewMode",payload:t})},w=t=>{s({type:"changeProductsPerPage",payload:Number(t.target.value)})},R=t=>{s({type:"changeSortValue",payload:t.target.value})},N=t=>{Number.isNaN(Number(t))||s({type:"changePageNumber",payload:t})};return c`${V({fetchIsFinished:n,productsSize:b,viewMode:d,productsPerPage:u,sortValue:h,handleViewModeIconClicked:C,handleProductsPerPageChanged:w,handleSortValueChanged:R})}${$({mainContentElement:v.current,productsOfCurrentPage:m,viewMode:d,emptyCollectionImage:o,itemClassList:{grid:"col-lg-3 col-md-6 col-grid-box",list:"col-lg-12"}})}${O({fetchIsFinished:n,pageNumber:e,displayedPageNumbers:g,pageCount:p,handlePageLinkClicked:N})}`}var y={tagName:"search-result-main-content",renderer:k,options:{observedAttributes:[],useShadowDOM:!1}};function K({defaultSortBy:a,emptyCollectionImage:l}){let s=new URLSearchParams(window.location.search),o=decodeURI(s.get("q")?.trim()??""),i=(e,r)=>{switch(r.type){case"setAllProducts":return{...e,allProducts:r.payload};case"setFetchIsFinished":return{...e,fetchIsFinished:r.payload};case"changeSortValue":return{...e,sortValue:r.payload,pageNumber:1};case"changeProductsPerPage":return{...e,productsPerPage:r.payload,pageNumber:1};case"changePageNumber":return{...e,pageNumber:r.payload};case"changeViewMode":return{...e,viewMode:r.payload};case"changeOnlineStoreOnly":return{...e,onlineStoreOnly:r.payload};default:return{...e}}},[n,d]=U(i,{allProducts:[],fetchIsFinished:!1,searchString:"",productsPerPage:24,pageNumber:1,viewMode:"grid",sortValue:"BEST_SELLING_ASC",onlineStoreOnly:!1}),{data:h}=L(z,{variables:{first:n.productsPerPage,query:`${G({searchString:o})}`,reverse:!!S(a).includes("DESC"),sortKey:S(a).replace("_DESC","").replace("_ASC","")}}),u=h?.products?.edges?.map(({node:e})=>H(e))??[];return D(async()=>{let e=await Q(o);d({type:"setAllProducts",payload:e}),d({type:"setFetchIsFinished",payload:!0})},[]),c`${W({children:c` <section class="authentication-page section-b-space">
      <div class="container">
        <section class="p-0">
          <div class="container">
            ${f({searchString:o})}
            <div class="row search-title-banner-row">
              <div class="col-lg-10 offset-lg-1">
                ${_({title:"SEARCH RESULTS"})}
              </div>
            </div>
            ${o?c` <div class="row">
                  <div class="col-lg-10 offset-lg-1">
                    <search-result-main-content></search-result-main-content>
                  </div>
                </div>`:null}
          </div>
        </section>
      </div>
    </section>`,productsOfFirstPage:u,state:n,dispatch:d,emptyCollectionImage:l})}`}[y,q,{tagName:"search-result",renderer:K,options:{observedAttributes:["default-sort-by","empty-collection-image"],useShadowDOM:!1}}].forEach(a=>{customElements.define(a.tagName,B(a.renderer,a.options))});
//# sourceMappingURL=data:application/json;base64,
