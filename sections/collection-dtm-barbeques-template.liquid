<script>
{% render 'get-selected-from-query-string' %}


const gasGrillBrands = [
    'Big Green Egg',
    'Black Earth Grills',
    'Broil King',
    'Chuckwagon',
    'Delta Heat',
    'Hestan',
    'Huntington',
    'Lynx Grills',
    'Napoleon',
    'Pit Boss',
    'Twin Eagles',
    'Weber',
];
const charcoalGrillBrands = [
    'Big Green Egg',
    'Broil King',
    'Bulldog',
    'Delta Heat',
    'Hestan',
    'Kamado Joe',
    'Lynx Grills',
    'Masterbuilt',
    'Napoleon',
    'Pit Barrel Cooker',
    'PK Grills',
    'Regal', // doesn't exist
    'Sunterra',
    'Twin Eagles',
    'Weber', 
]
const pelletGrillBrands = [
    'Big Green Egg',
    'Black Earth Grills',
    'Broil King',
    'Delta Heat',
    'Hestan',
    'Kamado Joe',
    'Louisiana Grills',
    'Lynx Grills',
    'Napoleon',
    'Pit Boss', 
    'Traeger',
    'Twin Eagles', 
    'Weber',
    'Yoder Smokers',
]
const electricBrands = [
    'Big Green Egg',
    'Broil King',
    'Bradley',
    'Bulldog',
    'Delta Heat',
    'Hestan',
    'Lynx Grills',
    'Napoleon',
    'Twin Eagles', 
    'Weber',
]
const offsetSmokerBrands = [
    'Big Green Egg',
    'Bradley',
    'Broil King',
    'Bulldog',
    'Delta Heat',
    'Hestan',
    'Lynx Grills',
    'Egg Modular', // doesn't exist
    'Kamado Joe', 
    'Louisiana Grills',
    'Masterbuilt',
    'Napoleon',
    'Twin Eagles',
    'Yoder Smokers',                
]
const pizzaOvenBrands = [
    'Big Green Egg',
    'Delta Heat',
    'Fontana',
    'Hestan',
    'LaPiazza Wood Ovens',
    'Lynx Grills',
    'Ooni', 
    'Twin Eagles',
]
const brandsOfCookType = {
    'Gas Grill': gasGrillBrands,
    'Charcoal Grill': charcoalGrillBrands,
    'Pellet Grill': pelletGrillBrands,
    'Electric Grill': electricBrands,
    'Offset Smoker': offsetSmokerBrands,
    'Pizza Oven': pizzaOvenBrands
}
const filters = [{
    stateKey: "searchString",
    actionType: "changeSearchString",
    title: "Search",
    type: "SearchInput",
    info: [],
    selected: params?.['searchString'] ?? ""
}, {
    stateKey: "selectedCookTypesAndBrands",
    actionType: "changeCookTypesAndBrands",
    title: "Grill Types\/Brands",
    type: "NestedFilter",
    info: [
        [
            'Gas Grill', gasGrillBrands
        ],
        [
            'Charcoal Grill', charcoalGrillBrands
        ],
        [
            'Pellet Grill', pelletGrillBrands
        ],
        [
            'Electric Grill', electricBrands
        ],
        [
            'Offset Smoker', offsetSmokerBrands
        ],
        [
            'Pizza Oven', pizzaOvenBrands
        ]
    ],
    selected: (params?.['selectedCookTypesAndBrands'] ?? []).filter(
        ([cookType, [firstBrand]]) => {
            return firstBrand === undefined || brandsOfCookType[cookType]?.includes(firstBrand);
        }
    )
}, {
    stateKey: "currentPriceRange",
    actionType: "changePriceRange",
    title: "Price Range",
    type: "RangeSlider",
    info: [0, 6500, 250],
    selected: params?.['currentPriceRange'] ?? [0, 6500]
}, {
    stateKey: "currentGrillCookingAreaRange",
    actionType: "changeGrillCookingAreaRange",
    title: "Grill Cooking Area",
    type: "RangeSlider",
    info: [0, 75, 5],
    selected: params?.['currentGrillCookingAreaRange'] ?? [0, 75]
}, {
    stateKey: "selectedStandTypes",
    actionType: "changeStandTypes",
    title: "Stand Types",
    type: "SimpleFilter",
    info: ['Portable','Free Standing','Built In'],
    selected: params?.['selectedStandTypes'] ?? []
}, {
    stateKey: "clearance",
    actionType: "changeClearance",
    title: "Clearance",
    type: "Checkbox",
    info: [],
    selected: params?.['clearance'] ?? false
}, ]


const pelement = document.createElement('product-type-collection');
pelement.setAttribute('all-filters', JSON.stringify(filters));
pelement.setAttribute('class', 'dtm dtm-product-type-collection');
pelement.setAttribute('product-type', {{collection.all_types|first|json}});
pelement.setAttribute('default-sort-by', {{collection.default_sort_by|json}});
pelement.setAttribute('collection-title', "GRILLS / SMOKERS");
pelement.setAttribute('collection-metafield', JSON.stringify({{collection.metafields.dtm.info|json}}));
pelement.setAttribute('empty-collection-image', {{"empty-collection.png"|asset_url|json}});
document.currentScript.parentNode.insertBefore(pelement, document.currentScript);

document.addEventListener('stateChanged', getStateChangeHandler(filters.map(f => f.stateKey)));

</script>
<template id='top-images-placeholder'>
    <div class="top-image-wrapper d-flex align-items-center justify-content-center py-5 mb-3">
      <a href="/pages/find-your-girll"><i class="icon-md-flame iconfont top-image-icon pr-2 pt-1"></i><span class="top-image-text">WHY LUXE BBQ</span></a>
    </div>
    <div class="top-image-wrapper d-flex align-items-center justify-content-center py-5">
      <a href="/pages/find-your-girll"><i class="icon-search iconfont top-image-icon pr-2 pt-1"></i><span class="top-image-text">MY PERFECT GRILL TOOL</span></a>
    </div>
    <style>
        .top-image-wrapper {
            background-color: #fb711c;
            color: white;
        }
        .top-image-text {
            font-size: 1.6em;
            color: white;
        }
        .top-image-icon.iconfont {
            font-size: 1.5em;
            color: white;
        }
    </style>
</template>
{% schema %}
{
  "name": "Barbeques",
  "class": "dtm-collection-section dtm-barbeques-collection-section dtm-product-type-collection-section",
  "settings": []
}
{% endschema %}


{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
